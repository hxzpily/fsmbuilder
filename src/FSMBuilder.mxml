<?xml version="1.0" encoding="utf-8"?>
<s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009" 
					   xmlns:s="library://ns.adobe.com/flex/spark" 
					   xmlns:mx="library://ns.adobe.com/flex/mx"
					   width="1000"
					   height="1000" 
					   xmlns:local="*" 
					   xmlns:config="framework.config.*"
					   implements="org.swizframework.core.ISwizAware" xmlns:diagram="mvcs.view.diagram.*" xmlns:writer="mvcs.view.writer.*" 
					   >
	<fx:Declarations>
		<config:FSMConfig id="config"/>
		
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import framework.events.CommandEvent;
			
			import mvcs.model.diagram.FSMModel;
			import mvcs.model.project.ProjectModel;
			import mvcs.utils.autoupdate.AutoUpdater;
			import mvcs.utils.writers.RobotlegsEnhancedWriter;
			import mvcs.view.project.ProjectRootWindow;
			
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			
			import org.swizframework.core.ISwiz;
			import org.swizframework.core.Swiz;
			
			import spark.events.IndexChangeEvent;
			
			private var _swiz:ISwiz
			public function set swiz(value:ISwiz):void
			{
				_swiz = value;
			}
			
			[Inject]
			public var dispatcher:EventDispatcher
			
			[Inject]
			[Bindable]
			public var fsmModel:FSMModel;
			
			[Inject]
			[Bindable]
			public var projectModel:ProjectModel;
			
			[Inject]
			[Bindable]
			public var autoUpdater:AutoUpdater;
			
			protected function viewChange(event:IndexChangeEvent):void
			{
				if (event.newIndex == 1 && output)
					outputUpdate();
			}
			
			protected function outputUpdate(event:FlexEvent = null):void
			{
				output.text = new RobotlegsEnhancedWriter().getFileContent(fsmModel);
			}
			
			protected function projectRoot_clickHandler(event:MouseEvent):void
			{
				var window:ProjectRootWindow = new ProjectRootWindow();
				_swiz.registerWindow(window);
				PopUpManager.addPopUp(window, this, false);
				PopUpManager.centerPopUp(window);

				
			}
			
		]]>
	</fx:Script>
	
	<s:VGroup width="100%" height="100%">
		<!-- Create a Spark ButtonBar control to navigate 
		the ViewStack container. -->
		<s:ButtonBar dataProvider="{myViewStack}" change="viewChange(event)"/>
		
		<!-- Define the ViewStack and the three child containers. -->
		<mx:ViewStack id="myViewStack" 
					  borderStyle="solid"
					  height="100%"
					  width="100%">
			
			<s:NavigatorContent id="createContent" label="Diagram">
				<s:HGroup width="100%" height="100%">
					<s:VGroup height="100%">
						<s:Button id="loadFile" label="load.." click="dispatcher.dispatchEvent(new CommandEvent(CommandEvent.COMMAND_FILE_LOAD))"/>
						<s:Button id="saveFile" label="save.." click="dispatcher.dispatchEvent(new CommandEvent(CommandEvent.COMMAND_FILE_SAVE))"/>
						<s:Button id="createState" label="create state" click="diagram.stateCreate()"/>
					</s:VGroup>
					<diagram:Diagram 
						id="diagram" 
						FSMmodel="{fsmModel}" 
						width="100%" height="100%"  
						doubleClickEnabled="true" 
						doubleClick="diagram.stateCreate(true)"/>
					<s:VGroup height="100%" width="200">
						<s:Spacer height="10"/>
						<s:Label text="Project Source" textAlign="center" width="100%" fontSize="15"/>
						<s:TextInput id="projectRoot" width="100%" prompt="project root" selectable="false" click="projectRoot_clickHandler(event)" text="{projectModel.sourceURL}"/>
						<s:TextInput id="projectFramework" width="100%" prompt="project framework" text="{projectModel.framework}"/>
						<mx:TabNavigator width="200" resizeToContent="true" selectedIndex="2">
							<s:NavigatorContent width="100%" height="100%" label="Model">
								<s:List width="100%" height="100%" dataProvider="{projectModel.models}" labelField="name"/>
							</s:NavigatorContent>
							<s:NavigatorContent width="100%" height="100%" label="View">
								<s:List width="100%" height="100%" dataProvider="{projectModel.views}" labelField="name"/>
							</s:NavigatorContent>
							<s:NavigatorContent width="100%" height="100%" label="Controller">
								<s:List width="100%" height="100%" dataProvider="{projectModel.controllers}" labelField="name"/>
							</s:NavigatorContent>
						</mx:TabNavigator>
						
					</s:VGroup>
				</s:HGroup>
				<s:Label id="currentVersion" text="{AutoUpdater.versionString}" bottom="0" right="0"/>
			</s:NavigatorContent>
			
			<s:NavigatorContent id="outputContent" label="Robotlegs">
				<writer:CodePreview id="output" width="100%" height="100%" creationComplete="outputUpdate(event)"/>
			</s:NavigatorContent>
		</mx:ViewStack>
	</s:VGroup>
	
	
	
	
	
</s:WindowedApplication>
