{"tagline":"Finite State Machine builder. Design and build a Finite State Machine, then generate the code. AS3 / RobotLegs only right now.","body":"Finite State Machine(FSM) Builder\r\n=================================\r\n\r\nFinite State Machine builder. Design and build a Finite State Machine, then generate the code. AS3 / RobotLegs only right now.\r\n\r\n\r\n***Objectives***\r\n\r\nBelow are listed the fundemental objectives.\r\n\r\n- create or update an existing MVC(S) project in a given language + framwork\r\n- create state machine for it\r\n- design and edit state machine logic\r\n- access the source of the project, for assistance to the user\r\n- generate code for project\r\n- allow open source development to add support for other languages + frameworks\r\n\r\nThe GUI must be able to create and reference exising commands, that the state machine calls.\r\n\r\n***Initial Application***\r\n\r\nThe initial GUI will be built to harness ActionScript, and Robotlegs state machines.\r\n\r\n\r\n***Design***\r\n\r\n\r\nFSMBuilder allows a developer/product manager to design the flow of an application, from \"startup\", through different other individual states and specify which states are accessable to them. These are known are \"Transitions\".\r\n\r\n***Code Generation***\r\n\r\nCode is generated easily from the design, which can be viewed by clicking on the relevant tab. This code is generated via a \"Writer\" class, which implements the IWriter interface. It simply takes the FSMModel, and parses it.\r\n\r\nCurrently only Actionscript > Robotlegs > Enchanced FSM is supported. But any other FSM would be could be easily integrated.\r\n\r\n","name":"Finite State Machine Builder","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}